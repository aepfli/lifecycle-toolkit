name: Release Documentation

on:
  release:
    types: [published]


env:
  PAGE_DIR: ./tmp/page
  DOCS_DIR: ./tmp/page/docs

jobs:
  release-docs:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Checkout - page branch
        uses: actions/checkout@v3
        with:
          ref: "page"
          path: ${{ env.PAGE_DIR }}
    
      - name: Get Latest Release Information
        uses: octokit/request-action@v2.x
        id: latest_release
        with:
          route: GET /repos/:owner/:repository/releases/latest
          repository: lifecycle-toolkit
          owner: keptn
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Detect needed Folder Operations
        id: folder
        run: |
            CURRENT_VERSION=`cat $DOCS_DIR/content/en/docs/version || "unknown"`
            echo $CURRENT_VERSION
            if [[ "${{ fromJson(steps.latest_release.outputs.data).tag_name }}" == "${{ github.event.release.tag_name }}" ]]; then
              if [[ "${{ fromJson(steps.latest_release.outputs.data).tag_name }}" != "$CURRENT_VERSION" ]]; then
                echo "migrate=docs-$CURRENT_VERSION" >> $GITHUB_OUTPUT
              fi
              echo "name=docs" >> $GITHUB_OUTPUT
              echo "latest=true" >> $GITHUB_OUTPUT
            else
              echo "name=docs-${{github.event.release.tag_name}}" >> $GITHUB_OUTPUT
            fi
      - name: Move old latest release documentation folder
        run: cp -R "$DOCS_DIR/content/en/docs/." "$DOCS_DIR/content/en/${{ steps.folder.outputs.migrate}}"
        if: ${{steps.folder.outputs.migrate }}
      - name: Copy configuration
        run: |
          cp -R ./docs/. "$DOCS_DIR"
        if: ${{steps.folder.outputs.latest }}
      - name: Copy documentation folder
        run: |
            cp -R ./docs/content/en/docs/. "$DOCS_DIR/content/en/${{ steps.folder.outputs.name}}"
            echo "${{ fromJson(steps.latest_release.outputs.data).tag_name }}" > "$DOCS_DIR/content/en/${{ steps.folder.outputs.name}}/version"

      - name: Push content
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          cwd: ${{ env.PAGE_DIR }}
          message: "releasing documentation ${{ fromJson(steps.latest_release.outputs.data).tag_name }}"
